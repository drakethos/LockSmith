<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Import Project="packages\JotunnLib.2.23.0\build\JotunnLib.props" Condition="Exists('packages\JotunnLib.2.23.0\build\JotunnLib.props')" />
    <Import Project="packages\JotunnLib.2.16.2\build\JotunnLib.props" Condition="Exists('packages\JotunnLib.2.16.2\build\JotunnLib.props')" />
    <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
    <Import Project="environment.props" />
    <PropertyGroup>
        <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
        <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
        <ProjectGuid>{5DF97E86-BF46-46C5-894F-6B2D80EA6645}</ProjectGuid>
        <OutputType>Library</OutputType>
        <AppDesignerFolder>Properties</AppDesignerFolder>
        <RootNamespace>LockSmith</RootNamespace>
        <AssemblyName>LockSmith</AssemblyName>
        <CompanyName>DrakeMod</CompanyName>
        <Version>0.0.1</Version>
        <Description>Manage your door and chests within your wards for more control</Description>
        <Website_Url>no site.com</Website_Url>
        <TargetFrameworkVersion>v4.8.1</TargetFrameworkVersion>
        <FileAlignment>512</FileAlignment>
        <LangVersion>latestmajor</LangVersion>
        <Nullable>enable</Nullable>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
        <PlatformTarget>AnyCPU</PlatformTarget>
        <DebugSymbols>true</DebugSymbols>
        <DebugType>full</DebugType>
        <Optimize>false</Optimize>
        <OutputPath>bin\Debug\</OutputPath>
        <DefineConstants>DEBUG;TRACE</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <PlatformTarget>AnyCPU</PlatformTarget>
        <DebugType>pdbonly</DebugType>
        <Optimize>true</Optimize>
        <OutputPath>bin\Release\</OutputPath>
        <DefineConstants>TRACE</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
    </PropertyGroup>
    <ItemGroup>
        <Reference Include="0Harmony">
            <HintPath>$(BepInExPath)\core\0Harmony.dll</HintPath>
        </Reference>
        <Reference Include="BepInEx">
            <HintPath>$(BepInExPath)\core\BepInEx.dll</HintPath>
        </Reference>
        <Reference Include="assembly_guiutils">
            <HintPath>$(PublicizedAssembliesPath)\assembly_guiutils_publicized.dll</HintPath>
        </Reference>
        <Reference Include="assembly_utils">
            <HintPath>$(PublicizedAssembliesPath)\assembly_utils_publicized.dll</HintPath>
        </Reference>
        <Reference Include="assembly_valheim">
            <HintPath>$(PublicizedAssembliesPath)\assembly_valheim_publicized.dll</HintPath>
        </Reference>
        <Reference Include="Jotunn, Version=2.23.0.0, Culture=neutral, processorArchitecture=MSIL">
          <HintPath>packages\JotunnLib.2.23.0\lib\net462\Jotunn.dll</HintPath>
        </Reference>
        <Reference Include="Microsoft.CSharp" />
        <Reference Include="UnityEngine">
            <HintPath>$(CorlibPath)\UnityEngine.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.AssetBundleModule">
            <HintPath>$(CorlibPath)\UnityEngine.AssetBundleModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.CoreModule">
            <HintPath>$(CorlibPath)\UnityEngine.CoreModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.ImageConversionModule">
            <HintPath>$(CorlibPath)\UnityEngine.ImageConversionModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.IMGUIModule">
            <HintPath>$(CorlibPath)\UnityEngine.IMGUIModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.InputLegacyModule">
            <HintPath>$(CorlibPath)\UnityEngine.InputLegacyModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.AnimationModule">
            <HintPath>$(CorlibPath)\UnityEngine.AnimationModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.JSONSerializeModule">
            <HintPath>$(CorlibPath)\UnityEngine.JSONSerializeModule.dll</HintPath>
        </Reference>
        <Reference Include="Unity.TextMeshPro">
            <HintPath>$(CorlibPath)\Unity.TextMeshPro.dll</HintPath>
        </Reference>
        <Reference Include="System" />
        <Reference Include="System.Core" />
        <Reference Include="System.Data" />
        <Reference Include="System.Data.DataSetExtensions" />
        <Reference Include="System.Xml" />
        <Reference Include="System.Xml.Linq" />
        <Reference Include="UnityEngine.UI, Version=1.0.0.0, Culture=neutral, processorArchitecture=MSIL">
            <HintPath>packages\Pfhoenix.Valheim.ModProjectReferences.1.0.20\lib\net46\UnityEngine.UI.dll</HintPath>
        </Reference>
    </ItemGroup>
    <ItemGroup>
        <Compile Include="ItemLib.cs" />
        <Compile Include="LockSmith.cs" />
        <Compile Include="Properties\AssemblyInfo.cs" />
    </ItemGroup>
    <ItemGroup>
        <None Include="App.config" />
        <None Include="packages.config" />
    </ItemGroup>
    <ItemGroup>
        <AssetsToCopy Include="Assets\**\*" />
    </ItemGroup>
    <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
    <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
        <PropertyGroup>
            <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them. For more information, see http://go.microsoft.com/fwlink/?LinkID=322105.The missing file is {0}.</ErrorText>
        </PropertyGroup>
        <Error Condition="!Exists('packages\JotunnLib.2.23.0\build\JotunnLib.props')" Text="$([System.String]::Format('$(ErrorText)', 'packages\JotunnLib.2.23.0\build\JotunnLib.props'))" />
    </Target>
    <Target Name="CopyOutput" AfterTargets="Build">
        <PropertyGroup>
            <!-- Construct the target folder dynamically -->
            <TargetFolder>$(CompanyName)-$(AssemblyName)</TargetFolder>
            <!-- Combine the base path, profile, and plugins folder -->
            <FullDestinationPath>$(R2ModPath)\$(ProfileName)\BepInEx\plugins\$(TargetFolder)</FullDestinationPath>
        </PropertyGroup>
        <!-- Ensure the target folder exists -->
        <MakeDir Directories="$(FullDestinationPath)"/>
        <!-- Copy the DLL to the correct folder -->
        <Copy
                SourceFiles="$(TargetDir)$(TargetFileName)"
                DestinationFolder="$(FullDestinationPath)\"/>
        <!-- Copy assets -->
        <Copy
                SourceFiles="@(AssetsToCopy)"
                DestinationFolder="$(FullDestinationPath)\Assets\"/>
    </Target>

    <Target Name="PackageMod" AfterTargets="Build">
        <!-- Ensure the Thunderstore folder exists -->
        <MakeDir Directories="$(ThunderstoreFolder)"/>

        <!-- Generate the manifest.json file -->
        <WriteLinesToFile
                File="$(ManifestPath)"
                Lines="@(ManifestJson)"
                Overwrite="true"/>

        <!-- Copy the DLL to the Thunderstore folder -->
        <Copy
                SourceFiles="$(TargetDir)$(TargetFileName)"
                DestinationFolder="$(ThunderstoreFolder)\"/>
    
        <Copy
                SourceFiles="@(AssetsToCopy)"
                DestinationFolder="$(ThunderstoreFolder)\Assets\"/>
        <!-- Zip the Thunderstore folder -->
        <Exec Command="powershell -Command Compress-Archive -Path '$(ThunderstoreFolder)\*' -DestinationPath '$(ZipOutput)' -Force"/>
    </Target>

    <!-- Define the JSON structure to be written to the manifest -->
    <ItemGroup>
        <ManifestJson Include='{
    "name": "$(AssemblyName)",
    "version_number": "$(Version)",
    "author": "$(CompanyName)",
    "description": "$(Description)",
    "website_url": "$(WebsiteUrl)",
    "dependencies": [ $(Dependencies) ]
}' />
    </ItemGroup>

   <!-- <ItemGroup>
      <Content Include="Assets\BlueKey.jpg" />
      <Content Include="Assets\BrownKey.jpg" />
      <Content Include="Assets\GoldKey.jpg" />
      <Content Include="Assets\goldKey.png" />
      <Content Include="Assets\IronKey.jpg" />
      <Content Include="Assets\ironKey.png" />
      <Content Include="Assets\MasterKey.jpg" />
      <Content Include="Assets\newBox" />
      <Content Include="environment.props" />
      <Content Include="ILRepack.targets" />
    </ItemGroup>-->
</Project>
